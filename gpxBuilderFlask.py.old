from flask import Flask, render_template, request, send_file
from datetime import datetime, timedelta
import xml.etree.ElementTree as ET
import io

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('form.html')

@app.route('/generate', methods=['POST'])
def generate_gpx():
    # Retrieve form data
    coordinates_str = request.form.get('coordinates', '')
    coordinates_list = coordinates_str.strip().splitlines()
    coordinates = []
    for line in coordinates_list:
        try:
            lat, lon = map(float, line.split(','))
            coordinates.append((lat, lon))
        except ValueError:
            continue  # Skip any lines with improper formatting

    # Initialize GPX root element
    gpx = ET.Element("gpx", version="1.1", creator="Flask Web App")

    # Starting timestamp
    start_time = datetime(2024, 5, 7, 12, 0, 0)

    # Create waypoint elements
    for index, (lat, lon) in enumerate(coordinates):
        waypoint = ET.SubElement(gpx, "wpt", lat=str(lat), lon=str(lon))
        name = ET.SubElement(waypoint, "name")
        name.text = f"Waypoint {index + 1}"

        # Increment the timestamp for each waypoint
        time = ET.SubElement(waypoint, "time")
        waypoint_time = start_time + timedelta(minutes=index)
        time.text = waypoint_time.strftime("%Y-%m-%dT%H:%M:%SZ")

    # Generate the XML tree structure
    gpx_tree = ET.ElementTree(gpx)

    # Save to a memory buffer
    gpx_buffer = io.BytesIO()
    gpx_tree.write(gpx_buffer, encoding='utf-8', xml_declaration=True)
    gpx_buffer.seek(0)

    # Send the GPX file to the user
    return send_file(gpx_buffer, as_attachment=True, download_name="waypoints.gpx", mimetype="application/gpx+xml")

if __name__ == '__main__':
    app.run(debug=True)